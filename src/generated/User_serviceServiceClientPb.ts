/**
 * @fileoverview gRPC-Web generated client stub for me.rayatnia.proto
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: user_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as user_service_pb from './user_service_pb'; // proto import: "user_service.proto"


export class UserServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorValidateUserData = new grpcWeb.MethodDescriptor(
    '/me.rayatnia.proto.UserService/ValidateUserData',
    grpcWeb.MethodType.UNARY,
    user_service_pb.ValidateUserDataRequest,
    user_service_pb.ValidateUserDataResponse,
    (request: user_service_pb.ValidateUserDataRequest) => {
      return request.serializeBinary();
    },
    user_service_pb.ValidateUserDataResponse.deserializeBinary
  );

  validateUserData(
    request: user_service_pb.ValidateUserDataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_service_pb.ValidateUserDataResponse>;

  validateUserData(
    request: user_service_pb.ValidateUserDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_service_pb.ValidateUserDataResponse) => void): grpcWeb.ClientReadableStream<user_service_pb.ValidateUserDataResponse>;

  validateUserData(
    request: user_service_pb.ValidateUserDataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_service_pb.ValidateUserDataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/me.rayatnia.proto.UserService/ValidateUserData',
        request,
        metadata || {},
        this.methodDescriptorValidateUserData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/me.rayatnia.proto.UserService/ValidateUserData',
    request,
    metadata || {},
    this.methodDescriptorValidateUserData);
  }

  methodDescriptorUploadUserData = new grpcWeb.MethodDescriptor(
    '/me.rayatnia.proto.UserService/UploadUserData',
    grpcWeb.MethodType.UNARY,
    user_service_pb.UploadUserDataRequest,
    user_service_pb.UploadUserDataResponse,
    (request: user_service_pb.UploadUserDataRequest) => {
      return request.serializeBinary();
    },
    user_service_pb.UploadUserDataResponse.deserializeBinary
  );

  uploadUserData(
    request: user_service_pb.UploadUserDataRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_service_pb.UploadUserDataResponse>;

  uploadUserData(
    request: user_service_pb.UploadUserDataRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_service_pb.UploadUserDataResponse) => void): grpcWeb.ClientReadableStream<user_service_pb.UploadUserDataResponse>;

  uploadUserData(
    request: user_service_pb.UploadUserDataRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_service_pb.UploadUserDataResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/me.rayatnia.proto.UserService/UploadUserData',
        request,
        metadata || {},
        this.methodDescriptorUploadUserData,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/me.rayatnia.proto.UserService/UploadUserData',
    request,
    metadata || {},
    this.methodDescriptorUploadUserData);
  }

  methodDescriptorGetUserById = new grpcWeb.MethodDescriptor(
    '/me.rayatnia.proto.UserService/GetUserById',
    grpcWeb.MethodType.UNARY,
    user_service_pb.GetUserByIdRequest,
    user_service_pb.GetUserResponse,
    (request: user_service_pb.GetUserByIdRequest) => {
      return request.serializeBinary();
    },
    user_service_pb.GetUserResponse.deserializeBinary
  );

  getUserById(
    request: user_service_pb.GetUserByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_service_pb.GetUserResponse>;

  getUserById(
    request: user_service_pb.GetUserByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_service_pb.GetUserResponse) => void): grpcWeb.ClientReadableStream<user_service_pb.GetUserResponse>;

  getUserById(
    request: user_service_pb.GetUserByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_service_pb.GetUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/me.rayatnia.proto.UserService/GetUserById',
        request,
        metadata || {},
        this.methodDescriptorGetUserById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/me.rayatnia.proto.UserService/GetUserById',
    request,
    metadata || {},
    this.methodDescriptorGetUserById);
  }

  methodDescriptorGetUserByEmail = new grpcWeb.MethodDescriptor(
    '/me.rayatnia.proto.UserService/GetUserByEmail',
    grpcWeb.MethodType.UNARY,
    user_service_pb.GetUserByEmailRequest,
    user_service_pb.GetUserResponse,
    (request: user_service_pb.GetUserByEmailRequest) => {
      return request.serializeBinary();
    },
    user_service_pb.GetUserResponse.deserializeBinary
  );

  getUserByEmail(
    request: user_service_pb.GetUserByEmailRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_service_pb.GetUserResponse>;

  getUserByEmail(
    request: user_service_pb.GetUserByEmailRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_service_pb.GetUserResponse) => void): grpcWeb.ClientReadableStream<user_service_pb.GetUserResponse>;

  getUserByEmail(
    request: user_service_pb.GetUserByEmailRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_service_pb.GetUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/me.rayatnia.proto.UserService/GetUserByEmail',
        request,
        metadata || {},
        this.methodDescriptorGetUserByEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/me.rayatnia.proto.UserService/GetUserByEmail',
    request,
    metadata || {},
    this.methodDescriptorGetUserByEmail);
  }

  methodDescriptorGetAllUsers = new grpcWeb.MethodDescriptor(
    '/me.rayatnia.proto.UserService/GetAllUsers',
    grpcWeb.MethodType.UNARY,
    user_service_pb.GetAllUsersRequest,
    user_service_pb.GetAllUsersResponse,
    (request: user_service_pb.GetAllUsersRequest) => {
      return request.serializeBinary();
    },
    user_service_pb.GetAllUsersResponse.deserializeBinary
  );

  getAllUsers(
    request: user_service_pb.GetAllUsersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<user_service_pb.GetAllUsersResponse>;

  getAllUsers(
    request: user_service_pb.GetAllUsersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: user_service_pb.GetAllUsersResponse) => void): grpcWeb.ClientReadableStream<user_service_pb.GetAllUsersResponse>;

  getAllUsers(
    request: user_service_pb.GetAllUsersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: user_service_pb.GetAllUsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/me.rayatnia.proto.UserService/GetAllUsers',
        request,
        metadata || {},
        this.methodDescriptorGetAllUsers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/me.rayatnia.proto.UserService/GetAllUsers',
    request,
    metadata || {},
    this.methodDescriptorGetAllUsers);
  }

}

